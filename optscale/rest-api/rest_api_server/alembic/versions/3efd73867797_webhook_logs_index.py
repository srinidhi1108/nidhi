""""webhook_logs_index"

Revision ID: 3efd73867797
Revises: 332097787473
Create Date: 2021-10-15 06:42:05.826891

"""
import os
from alembic import op
import sqlalchemy as sa
from pymongo import MongoClient
from config_client.client import Client as EtcdClient

# revision identifiers, used by Alembic.
revision = '3efd73867797'
down_revision = '332097787473'
branch_labels = None
depends_on = None
DEFAULT_ETCD_HOST = 'etcd-client'
DEFAULT_ETCD_PORT = 80
WEBHOOK_INDEX_NAME = 'WebhookID'
ORG_INDEX_NAME = 'OrganizationID'



def _get_etcd_config_client():
    etcd_host = os.environ.get('HX_ETCD_HOST', DEFAULT_ETCD_HOST)
    etcd_port = os.environ.get('HX_ETCD_PORT', DEFAULT_ETCD_PORT)
    config_cl = EtcdClient(host=etcd_host, port=int(etcd_port))
    return config_cl


def _get_webhook_logs_collection():
    config_cl = _get_etcd_config_client()
    mongo_params = config_cl.mongo_params()
    mongo_conn_string = "mongodb://%s:%s@%s:%s" % mongo_params[:-1]
    mongo_client = MongoClient(mongo_conn_string)
    return mongo_client.restapi.webhook_logs


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'webhook',
        sa.Column('deleted_at', sa.Integer(), nullable=False),
        sa.Column('id', sa.String(36), nullable=False),
        sa.Column('created_at', sa.Integer(), nullable=False),
        sa.Column('organization_id',  sa.String(36), nullable=False),
        sa.Column('object_type', sa.Enum('ENVIRONMENT'), nullable=False),
        sa.Column('object_id', sa.String(36), nullable=False),
        sa.Column('active', sa.Boolean(), nullable=False, default=True),
        sa.Column('action', sa.Enum('BOOKING_ACQUIRE', 'BOOKING_RELEASE'),
                  nullable=False),
        sa.Column('url', sa.TEXT(), nullable=False),
        sa.Column('headers', sa.TEXT(), nullable=True),
        sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint(
            'organization_id', 'deleted_at', 'object_id', 'action',
            name='uc_org_id_deleted_at_obj_id_action')
        )
    op.create_index(op.f('ix_webhook_object_id'), 'webhook', ['object_id'],
                    unique=False)
    webhook_logs_collection = _get_webhook_logs_collection()
    webhook_logs_collection.create_index([('webhook_id', 1)],
                                         name=WEBHOOK_INDEX_NAME)
    webhook_logs_collection.create_index([('organization_id', 1)],
                                         name=ORG_INDEX_NAME)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    resources_collection = _get_webhook_logs_collection()
    indexes = [x['name'] for x in resources_collection.list_indexes()]
    for index_name in indexes:
        if index_name in [WEBHOOK_INDEX_NAME, ORG_INDEX_NAME]:
            resources_collection.drop_index(index_name)
    op.drop_index(op.f('ix_webhook_object_id'), table_name='webhook')
    op.drop_table('webhook')
    # ### end Alembic commands ###
