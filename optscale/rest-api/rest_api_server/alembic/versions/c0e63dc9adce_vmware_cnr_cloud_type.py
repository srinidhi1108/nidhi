""""vmware_cnr_cloud_type"

Revision ID: c0e63dc9adce
Revises: e056b9e5b563
Create Date: 2019-01-25 10:17:34.306120

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c0e63dc9adce'
down_revision = 'e056b9e5b563'
branch_labels = None
depends_on = None

old_cloud_types = sa.Enum('OPENSTACK', 'OPENSTACK_CNR', 'FAKE', 'AWS_CNR',
                          'OPENSTACK_HUAWEI_CNR', 'ALIBABA_CNR')
new_cloud_types = sa.Enum('OPENSTACK', 'OPENSTACK_CNR', 'FAKE', 'AWS_CNR',
                          'OPENSTACK_HUAWEI_CNR', 'ALIBABA_CNR', 'VMWARE_CNR')


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('cloud', 'type',
                    existing_type=new_cloud_types, nullable=False)
    op.alter_column('cloudsite', 'cloud_type',
                    existing_type=new_cloud_types, nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    ct = sa.sql.table('cloud', sa.sql.column('type', new_cloud_types))
    op.execute(ct.update().where(ct.c.type.in_(
        ['VMWARE_CNR'])).values(type='FAKE'))
    op.alter_column('cloud', 'type',
                    existing_type=old_cloud_types, nullable=False)

    ct = sa.sql.table('cloudsite', sa.sql.column('cloud_type', new_cloud_types))
    op.execute(ct.update().where(ct.c.cloud_type.in_(
        ['VMWARE_CNR'])).values(cloud_type='FAKE'))
    op.alter_column('cloudsite', 'cloud_type',
                    existing_type=old_cloud_types, nullable=False)
    # ### end Alembic commands ###
