""""snapshot_size"

Revision ID: eee318ec3ce6
Revises: c665216914b3
Create Date: 2017-01-31 11:13:07.168732

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.orm import Session
from sqlalchemy.sql import table, column
from sqlalchemy import Integer, select, func, String, BigInteger, update


# revision identifiers, used by Alembic.
revision = 'eee318ec3ce6'
down_revision = 'c665216914b3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('snapshot', sa.Column('size', sa.BigInteger(),
                                        nullable=False))
    # ### end Alembic commands ###

    # Data migration
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        snapshots_table = table('snapshot',
                            column('volume_id', String(36)),
                            column('id', String(36)),
                            column('num', Integer),
                            column('size', BigInteger))
        stmt = select([snapshots_table])
        for snapshot in session.execute(stmt):
            try:
                snap_table = table('volume_%s' % snapshot['volume_id'],
                                   column('num', Integer),
                                   column('snap', Integer))
                sql = select([func.count()]).select_from(snap_table).where(
                    snap_table.c.snap == snapshot['num'])
                count = session.execute(sql).scalar()
                # one block == 64k, need size in bytes
                upd_stmt = update(snapshots_table).values(
                    size=count * 64 * 1024).where(
                    snap_table.c.id == snapshot['id'])
                session.execute(upd_stmt)
                session.commit()
            # TODO: more specific exception (table not found?)
            except Exception as exc:
                session.rollback()
    finally:
        session.close()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('snapshot', 'size')
    # ### end Alembic commands ###
