""""added_discovery_info_table"

Revision ID: 728302f9e711
Revises: 0ba63efb08e1
Create Date: 2020-12-08 11:44:53.172281

"""
import uuid
from datetime import datetime

from alembic import op
import sqlalchemy as sa
from sqlalchemy import select, String, Integer
from sqlalchemy.orm import Session
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision = '728302f9e711'
down_revision = 'e114908c1ac1'
branch_labels = None
depends_on = None
resource_types = ['instance', 'volume', 'snapshot', 'bucket']


def upgrade():
    op.create_table(
        'discovery_info',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('cloud_account_id', sa.String(length=36), nullable=False),
        sa.Column('resource_type', sa.Enum(*resource_types),
                  nullable=False),
        sa.Column('created_at', sa.Integer(), nullable=False),
        sa.Column('deleted_at', sa.Integer(), nullable=False),
        sa.Column('last_discovery_at', sa.Integer(), nullable=False, default=0),
        sa.ForeignKeyConstraint(['cloud_account_id'], ['cloudaccount.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('cloud_account_id', 'resource_type', 'deleted_at',
                            name='uc_cloud_acc_id_del_at')
    )

    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        cloud_acc_table = table('cloudaccount',
                                column('id', String(36)),
                                )
        d_info_table = table('discovery_info',
                             column('id', String(36)),
                             column('cloud_account_id', String(36)),
                             column('resource_type', String(36)),
                             column('created_at', Integer()),
                             column('deleted_at', Integer()),
                             column('last_discovery_at', sa.Integer()),
                             )
        d_infos = []
        stmt = select([cloud_acc_table])
        for cloud_acc in session.execute(stmt):
            for resource_type in resource_types:
                d_info = {
                    'id': str(uuid.uuid4()),
                    'cloud_account_id': cloud_acc['id'],
                    'created_at': int(datetime.utcnow().timestamp()),
                    'deleted_at': 0,
                    'last_discovery_at': 0,
                    'resource_type': resource_type
                }
                d_infos.append(d_info)
        op.bulk_insert(d_info_table, d_infos)
        session.commit()
    except Exception:
        downgrade()
        raise
    finally:
        session.close()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('discovery_info')
    # ### end Alembic commands ###
