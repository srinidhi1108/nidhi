""""int_created_at"

Revision ID: de2e74456ef3
Revises: 325c35031a08
Create Date: 2020-08-03 12:28:37.791291

"""
import datetime
import sqlalchemy as sa

from alembic import op
from sqlalchemy.orm import Session
from sqlalchemy.sql import table, column
from sqlalchemy import select, String, update


# revision identifiers, used by Alembic.
revision = 'de2e74456ef3'
down_revision = '968fc936bfe4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        for table_name in [
            'partner', 'budget', 'cloudcredentials', 'resource', 'employee',
            'project', 'reportimport', 'invite', 'assignment_request', 'rule',
            'budget_alert', 'condition'
        ]:
            table_ = table(table_name,
                           column('id', String(36)),
                           column('created_at', sa.TIMESTAMP()))
            stmt = select([table_])
            entities = session.execute(stmt)
            map = {
                entity_id: int(date.timestamp()
                                  ) for entity_id, date in entities
            }
            op.alter_column(table_name, 'created_at',
                            existing_type=sa.TIMESTAMP(), nullable=True)
            stmt = update(table_).values(created_at=None)
            session.execute(stmt)
            op.alter_column(table_name, 'created_at',
                            existing_type=sa.Integer(), nullable=True)
            for k, v in map.items():
                stmt = update(table_).values(
                    created_at=v).where(table_.c.id == k)
                session.execute(stmt)
            op.alter_column(table_name, 'created_at',
                            existing_type=sa.Integer(), nullable=False)
        session.commit()
    except Exception:
        session.rollback()
        raise
    finally:
        session.close()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        for table_name in [
            'partner', 'budget', 'cloudcredentials', 'resource', 'employee',
            'project', 'reportimport', 'invite', 'assignment_request', 'rule',
            'budget_alert', 'condition'
        ]:
            table_ = table(table_name,
                           column('id', String(36)),
                           column('created_at', sa.Integer()))
            stmt = select([table_])
            entities = session.execute(stmt)
            map = {
                entity_id: datetime.datetime.fromtimestamp(
                    date) for entity_id, date in entities
            }
            op.alter_column(table_name, 'created_at',
                            existing_type=sa.Integer(), nullable=True)
            stmt = update(table_).values(created_at=None)
            session.execute(stmt)
            op.alter_column(table_name, 'created_at',
                            existing_type=sa.TIMESTAMP(), nullable=True)
            for k, v in map.items():
                stmt = update(table_).values(
                    created_at=v).where(table_.c.id == k)
                session.execute(stmt)
            op.alter_column(table_name, 'created_at',
                            existing_type=sa.TIMESTAMP(), nullable=False)
        session.commit()
    except Exception:
        session.rollback()
        raise
    finally:
        session.close()
    # ### end Alembic commands ###
